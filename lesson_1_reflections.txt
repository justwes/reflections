How did viewing a diff between two versions of a file help you see the bug that was introduced?

* Provided an easy way to see the differences without having to spend hours combing through code.

How could having easy access to the entire history of a file make you a more efficient programmer in the long run?

* You can see the changes as you develop your code. Viewing older solutions give you insight in how you solved an issue before.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

* Pros - You can control when and how often the changes are saved, and can contain the updates to specific updates/functions.

* Cons - If you lose power to your system prior to making the save all is lost. Whereas auto-saving would avoid that issue.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately.

* Git is built on the idea of large projects which many files be connected an updated. Being able to track changes across all the related files is a good thing.

How can you use the commands git log and git diff to view the history of files?

* git log allows me to see everything that has happened, who did it, and why.

* git diff allows me to see, at a better glance, what the applied changes were that showed up in the log.

How might using version control make you confident to make changes that could break something?

* If I am able to revert back to a working version after breaking it, there's no fear of making mistakes.

Now that you have your workspace set up, what do you want to try using Git for?

* I want to make some edits so I can see how these config changes look.

